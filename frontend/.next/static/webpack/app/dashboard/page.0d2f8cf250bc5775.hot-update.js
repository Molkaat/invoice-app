"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./lib/auth-context.tsx":
/*!******************************!*\
  !*** ./lib/auth-context.tsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const hasCheckedRenewal = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Fix refreshCredits to not depend on user state\n    const refreshCredits = ()=>{\n        setUser((currentUser)=>{\n            if (!currentUser) return currentUser;\n            const now = new Date();\n            const renewDate = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n            return {\n                ...currentUser,\n                credits: currentUser.creditsLimit,\n                creditsUsed: 0,\n                subscriptionRenewDate: renewDate\n            };\n        });\n    };\n    // Load user from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const token = localStorage.getItem(\"auth_token\");\n        const userData = localStorage.getItem(\"user_data\");\n        if (token && userData) {\n            try {\n                const parsedUser = JSON.parse(userData);\n                // Convert date string back to Date object if it exists\n                if (parsedUser.subscriptionRenewDate) {\n                    parsedUser.subscriptionRenewDate = new Date(parsedUser.subscriptionRenewDate);\n                } else {\n                    // Set default renewal date for new backend users\n                    const now = new Date();\n                    parsedUser.subscriptionRenewDate = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n                }\n                // Set default credits if not present (for backward compatibility)\n                if (!parsedUser.credits) {\n                    parsedUser.credits = 100;\n                    parsedUser.creditsUsed = 0;\n                    parsedUser.creditsLimit = 100;\n                }\n                parsedUser.token = token // Add token to user object\n                ;\n                setUser(parsedUser);\n            } catch (error) {\n                // Clear invalid data\n                localStorage.removeItem(\"auth_token\");\n                localStorage.removeItem(\"user_data\");\n            }\n        }\n    }, []);\n    // Check credit renewal only once when user first loads\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (user && user.subscriptionRenewDate && !hasCheckedRenewal.current) {\n            const now = new Date();\n            if (now >= user.subscriptionRenewDate) {\n                hasCheckedRenewal.current = true;\n                refreshCredits();\n            }\n        }\n    }, [\n        user\n    ]);\n    // Reset the renewal check flag when user logs out\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!user) {\n            hasCheckedRenewal.current = false;\n        }\n    }, [\n        user\n    ]);\n    // Save user to localStorage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (user) {\n            localStorage.setItem(\"user_data\", JSON.stringify(user));\n        }\n    }, [\n        user\n    ]);\n    const signIn = async (email, password)=>{\n        const response = await fetch(\"http://localhost:8000/auth/signin\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.detail || \"Sign in failed\");\n        }\n        const { user: backendUser, token } = await response.json();\n        // Store token\n        localStorage.setItem(\"auth_token\", token);\n        // Set up user data with credit system\n        const now = new Date();\n        const renewDate = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n        const userData = {\n            id: backendUser.id,\n            email: backendUser.email,\n            name: backendUser.name,\n            role: backendUser.role,\n            company_id: backendUser.company_id,\n            company_name: backendUser.company_name,\n            credits: 100,\n            creditsUsed: 0,\n            creditsLimit: 100,\n            subscriptionRenewDate: renewDate,\n            token\n        };\n        setUser(userData);\n    };\n    const signUp = async (email, password, name)=>{\n        const response = await fetch(\"http://localhost:8000/auth/signup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password,\n                full_name: name\n            })\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.detail || \"Sign up failed\");\n        }\n        const { user: backendUser, token } = await response.json();\n        // Store token\n        localStorage.setItem(\"auth_token\", token);\n        // Set up user data with credit system\n        const now = new Date();\n        const renewDate = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n        const userData = {\n            id: backendUser.id,\n            email: backendUser.email,\n            name: backendUser.name,\n            role: backendUser.role,\n            company_id: backendUser.company_id,\n            company_name: backendUser.company_name,\n            credits: 100,\n            creditsUsed: 0,\n            creditsLimit: 100,\n            subscriptionRenewDate: renewDate,\n            token\n        };\n        setUser(userData);\n    };\n    const signOut = ()=>{\n        localStorage.removeItem(\"auth_token\");\n        localStorage.removeItem(\"user_data\");\n        setUser(null);\n    };\n    const useCredit = ()=>{\n        let success = false;\n        setUser((currentUser)=>{\n            if (!currentUser || currentUser.credits <= 0) {\n                success = false;\n                return currentUser;\n            }\n            success = true;\n            return {\n                ...currentUser,\n                credits: currentUser.credits - 1,\n                creditsUsed: currentUser.creditsUsed + 1\n            };\n        });\n        return success;\n    };\n    const extractInvoice = async (formData)=>{\n        if (!(user === null || user === void 0 ? void 0 : user.token)) {\n            throw new Error(\"User is not authenticated\");\n        }\n        const response = await fetch(\"http://localhost:8000/extract-invoice/\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": \"Bearer \".concat(user === null || user === void 0 ? void 0 : user.token)\n            },\n            body: formData\n        });\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.detail || \"Invoice extraction failed\");\n        }\n        return await response.json();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            isAuthenticated: !!user,\n            signIn,\n            signUp,\n            signOut,\n            useCredit,\n            refreshCredits\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\my_project\\\\invoice docs\\\\frontend\\\\lib\\\\auth-context.tsx\",\n        lineNumber: 238,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"+nJ4gvRWX/lzWJSKzDBjP4afdFI=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth-context.tsx\n"));

/***/ })

});